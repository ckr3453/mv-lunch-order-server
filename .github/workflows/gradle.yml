# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
      
    - name: create application-apikey.yml file
      run: |
        cd ./src/main/resources
        touch ./application-apikey.yml
        echo "${{ secrets.APIKEY_YML }}" >> ./application-apikey.yml

    - name: create application-release.yml file
      run: |
        cd ./src/main/resources
        touch ./application-release.yml
        echo "${{ secrets.RELEASE_YML }}" >> ./application-release.yml

    - name: Gradle Caching
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build with Gradle
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: clean bootJar

    - name: docker login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
        
    # - name: docker build and push
    #   id: docker_build
    #   uses: docker/build-push-action@v3
    #   with:
    #     push: true
    #     tags: mv-lunch-order-server:latest

    - name: extract jar before image build
      run: java -Djarmode=layertools -jar ./build/libs/${{ secrets.JAR_NAME }} extract

    - name: docker image build
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }} .
      
    - name: docker Hub push
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}

  deploy:
    needs: build
    runs-on: [self-hosted, ckr-samsung-laptop]
    steps:
      - name: Github Checkout 
        uses: actions/checkout@v2 
        
      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: docker pull and run
        run: |
          docker stop ${{ github.event.repository.name }}
          docker rm ${{ github.event.repository.name }}
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}
          docker run -d -p 8099:8088 --name ${{ github.event.repository.name }} ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:latest

    # NOTE: The Gradle Wrapper is the default and recommended way to run Gradle (https://docs.gradle.org/current/userguide/gradle_wrapper.html).
    # If your project does not have the Gradle Wrapper configured, you can use the following configuration to run Gradle with a specified version.
    #
    # - name: Setup Gradle
    #   uses: gradle/actions/setup-gradle@dbbdc275be76ac10734476cc723d82dfe7ec6eda # v3.4.2
    #   with:
    #     gradle-version: '8.5'
    #
    # - name: Build with Gradle 8.5
    #   run: gradle build

  # dependency-submission:

  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write

  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Set up JDK 17
  #     uses: actions/setup-java@v4
  #     with:
  #       java-version: '17'
  #       distribution: 'temurin'

  #   # Generates and submits a dependency graph, enabling Dependabot Alerts for all project dependencies.
  #   # See: https://github.com/gradle/actions/blob/main/dependency-submission/README.md
  #   - name: Generate and submit dependency graph
  #     uses: gradle/actions/dependency-submission@dbbdc275be76ac10734476cc723d82dfe7ec6eda # v3.4.2
